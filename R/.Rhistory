marker = list(color = "fuchsia"),
type = 'scattermapbox',
hovertext = us_cities[,"City"])%>%
layout(
mapbox = list(
style = 'open-street-map',
zoom =2.5,
center = list(lon = -88, lat = 34)))
map
map <- Data %>%
plot_ly(
lat = ~latitude,
lon = ~longitude,
marker = list(color = "fuchsia"),
type = 'scattermapbox',
hovertext = us_cities[,"City"])%>%
layout(
mapbox = list(
style = 'open-street-map',
zoom =2.5,
center = list(lon = -88, lat = 34)))
typeof(Data)
head(Data)
Data <- sapply(files, read.csv, simplify=FALSE) %>% bind_rows(.id = "id") %>%
select(latitude, longitude, ant.genus, ant.species, date) %>%
as.data.frame() %>% na.omit() %>% filter(ant.genus=="Aphaenogaster") %>%
select(-ant.genus) %>% separate(date, c('Month', 'Day', 'Year'),'/')
Data[1822,c("Month", "Day", "Year")]<-  c(03,08,1878)
Data[1823, c("Month", "Day", "Year")]<- c(03,08,1878)
Data[1824, c("Month", "Day", "Year")]<- c(04,29,1889)
Data[1825, c("Month", "Day", "Year")]<- c(05,10,1896)
Data[1826, c("Month", "Day", "Year")]<- c(05,01,1898)
Data[1827, c("Month", "Day", "Year")]<- c(05,01,1898)
Data[1828, c("Month", "Day", "Year")]<- c(07,14,1899)
Data <- transform(Data, Year = as.numeric(Year))
map <- Data %>%
plot_ly(
lat = ~latitude,
lon = ~longitude,
marker = list(color = "fuchsia"),
type = 'scattermapbox',
hovertext = us_cities[,"City"])%>%
layout(
mapbox = list(
style = 'open-street-map',
zoom =2.5,
center = list(lon = -88, lat = 34)))
Map
map
map
aph_map <- Data %>%
plot_ly(
lat = ~latitude,
lon = ~longitude,
marker = list(color = "fuchsia"),
type = 'scattermapbox',
hovertext = us_cities[,"City"])%>%
layout(
mapbox = list(
style = 'open-street-map',
zoom =2.5,
center = list(lon = -88, lat = 34)))
aph_map
Data %>%
plot_ly(
lat = ~latitude,
lon = ~longitude,
marker = list(color = "fuchsia"),
type = 'scattermapbox',
hovertext = us_cities[,"City"])%>%
layout(
mapbox = list(
style = 'open-street-map',
zoom =2.5,
center = list(lon = -88, lat = 34)))
aph_map <- plot_geo(Data %>% sample_n(100), lat=~latitude, lon=~longitude)
aph_map
aph_map <- plot_ly(Data %>% sample_n(100), lat=~latitude, lon=~longitude,
marker = list(color = "fuchsia"),
type = 'scattermapbox',
hovertext = us_cities[,c('longitude','latitude')])
aph_map <- plot_ly(Data %>% sample_n(100), lat=~latitude, lon=~longitude,
marker = list(color = "fuchsia"),
type = 'scattermapbox',
hovertext =Data[,c('longitude','latitude')])
aph_map
Data~latitude
aph_map <- plot_ly(Data, lat=Data$latitude, lon=Data$longitude,
marker = list(color = "fuchsia"),
type = 'scattermapbox',
hovertext =Data[,c('longitude','latitude')])
aph_map
aph_map <- plot_ly(Data, lat=~latitude, lon=~longitude,
marker = list(color = "fuchsia"),
type = 'scattermapbox')
aaph_map
aph_map
aph_map <- plot_ly(Data, lat=~latitude, lon=~longitude,
marker = list(color = "fuchsia"),
type = 'scattermapbox',
hovertext =Data[,c('longitude','latitude')]) %>%
layout(mapbox = list(style = 'open-street-map', zoom =2.5,
center = list(lon = -88, lat = 34)))
aph_map
apheanogaster_map <- plot_ly(Data, lat=~latitude, lon=~longitude,
marker = list(color = "fuchsia"),
type = 'scattermapbox',
hovertext =Data[,c('longitude','latitude')]) %>%
layout(mapbox = list(style = 'open-street-map', zoom =2.5,
center = list(lon = -88, lat = 34)))
plotly_map_occurrences <- function(x){
plot_ly(Data, lat=~latitude, lon=~longitude,
marker = list(color = "fuchsia"),
type = 'scattermapbox',
hovertext =Data[,c('longitude','latitude')]) %>%
layout(mapbox = list(style = 'open-street-map', zoom =2.5,
center = list(lon = -71.81, lat = 43.64)))}
plotly_map_occurrences(Data)
plotly_map_occurrences <- function(x){
plot_ly(Data, lat=~latitude, lon=~longitude,
marker = list(color = "fuchsia"),
type = 'scattermapbox',
hovertext =Data[,c('longitude','latitude')]) %>%
layout(mapbox = list(style = 'open-street-map', zoom =5,
center = list(lon = -71.81, lat = 43.64)))}
plotly_map_occurrences(Data)
plotly_map_occurrences <- function(x){
plot_ly(Data, lat=~latitude, lon=~longitude,
marker = list(color = "fuchsia"),
type = 'scattermapbox',
hovertext =Data[,c('longitude','latitude')]) %>%
layout(mapbox = list(style = 'open-street-map', zoom =4.5,
center = list(lon = -71.81, lat = 43.64)))}
plotly_map_occurrences(Data)
colnames(Data)
plotly_map_occurrences <- function(df,title=''){
plot_ly(df, lat=~latitude, lon=~longitude,
marker = list(color = "fuchsia"),
type = 'scattermapbox',
hovertext =Data[,c('longitude','latitude')]) %>%
layout(mapbox = list(style = 'open-street-map', zoom =4.5,
center = list(lon = -71.81, lat = 43.64), title=title))}
plotly_map_occurrences(Data, title="Aphaenogaster Presence Locations")
plotly_map_occurrences <- function(df, title=""){
plot_ly(df, lat=~latitude, lon=~longitude,
marker = list(color = "fuchsia"),
type = 'scattermapbox',
hovertext =Data[,c('longitude','latitude')]) %>%
layout(mapbox = list(style = 'open-street-map', xaxis=list(title=title), zoom =4.5,
center = list(lon = -71.81, lat = 43.64)))}
plotly_map_occurrences(Data, title="Aphaenogaster Occurrences")
plot_ly(Data, lat=~latitude, lon=~longitude,
marker = list(color = "fuchsia"),
type = 'scattermapbox',
hovertext =Data[,c('longitude','latitude')]) %>%
layout(mapbox = list(style = 'open-street-map', xaxis=list(title="Map Title"), zoom =4.5,
center = list(lon = -71.81, lat = 43.64)))}
plot_ly(Data, lat=~latitude, lon=~longitude,
marker = list(color = "fuchsia"),
type = 'scattermapbox',
hovertext =Data[,c('longitude','latitude')]) %>%
layout(mapbox = list(style = 'open-street-map', xaxis=list(title="Map Title"), zoom =4.5,
center = list(lon = -71.81, lat = 43.64)))}
plot_ly(Data, lat=~latitude, lon=~longitude,
marker = list(color = "fuchsia"),
type = 'scattermapbox',
hovertext =Data[,c('longitude','latitude')]) %>%
layout(mapbox = list(style = 'open-street-map', xaxis=list(title="Map Title"), zoom =4.5,
center = list(lon = -71.81, lat = 43.64)))}
plot_ly(Data, lat=~latitude, lon=~longitude,
marker = list(color = "fuchsia"),
type = 'scattermapbox',
hovertext =Data[,c('longitude','latitude')]) %>%
layout(mapbox = list(style = 'open-street-map'), zoom =4.5,
center = list(lon = -71.81, lat = 43.64), xaxis=list(title="MapTitle"))
plot_ly(Data, lat=~latitude, lon=~longitude,
marker = list(color = "fuchsia"),
type = 'scattermapbox',
hovertext =Data[,c('longitude','latitude')]) %>%
layout(mapbox = list(style = 'open-street-map'), xaxis=list(title='Map Title'), zoom =4.5,
center = list(lon = -71.81, lat = 43.64))
plotly_map_occurrences <- function(df, title=""){
plot_ly(df, lat=~latitude, lon=~longitude,
marker = list(color = "fuchsia"),
type = 'scattermapbox',
hovertext =df[,c('longitude','latitude')]) %>%
layout(mapbox = list(style = 'open-street-map'), xaxis=list(title=title), zoom =4.5,
center = list(lon = -71.81, lat = 43.64))}
plotly_map_occurrences(Data, title="Map Title")
plotly_map_occurrences <- function(df){
plot_ly(df, lat=~latitude, lon=~longitude,
marker = list(color = "fuchsia"),
type = 'scattermapbox',
hovertext =df[,c('longitude','latitude')]) %>%
layout(mapbox = list(style = 'open-street-map'), zoom =4.5,
center = list(lon = -71.81, lat = 43.64))}
plotly_map_occurrences(Data)
plotly_map_occurrences <- function(x){
plot_ly(Data, lat=~latitude, lon=~longitude,
marker = list(color = "fuchsia"),
type = 'scattermapbox',
hovertext =Data[,c('longitude','latitude')]) %>%
layout(mapbox = list(style = 'open-street-map', zoom =4.5,
center = list(lon = -71.81, lat = 43.64)))}
plotly_map_occurrences(Data)
plotly_map_occurrences <- function(x){
plot_ly(x, lat=~latitude, lon=~longitude,
marker = list(color = "fuchsia"),
type = 'scattermapbox',
hovertext =x[,c('longitude','latitude')]) %>%
layout(mapbox = list(style = 'open-street-map', zoom =4.5,
center = list(lon = -71.81, lat = 43.64)))}
plotly_map_occurrences(Data)
plotly_map_occurrences <- function(x, title=''){
plot_ly(x, lat=~latitude, lon=~longitude,
marker = list(color = "fuchsia"),
type = 'scattermapbox',
hovertext =x[,c('longitude','latitude')]) %>%
layout(mapbox = list(style = 'open-street-map', zoom =4.5,
center = list(lon = -71.81, lat = 43.64))) %>%
layout(xaxis(list(title=title)))}
plotly_map_occurrences(Data, title = "Map Title")
plotly_map_occurrences <- function(x){
plot_ly(x, lat=~latitude, lon=~longitude,
marker = list(color = "fuchsia"),
type = 'scattermapbox',
hovertext =x[,c('longitude','latitude')]) %>%
layout(mapbox = list(style = 'open-street-map', zoom =4.5,
center = list(lon = -71.81, lat = 43.64)))}
plotly_map_occurrences(Data)
plotly_map_occurrences <- function(df){
plot_ly(df, lat=~latitude, lon=~longitude,
marker = list(color = "fuchsia"),
type = 'scattermapbox',
hovertext =df[,c('longitude','latitude')]) %>%
layout(mapbox = list(style = 'open-street-map', zoom =4.5,
center = list(lon = -71.81, lat = 43.64)))}
plotly_map_occurrences(df=Data)
Data = sapply(files, read.csv, simplify=FALSE) %>% bind_rows(.id = "id") %>%
select(latitude, longitude, ant.genus, ant.species) %>%
as.data.frame() %>% na.omit() %>% filter(ant.genus=="Aphaenogaster") %>%
select(-ant.genus) %>% mutate(ID=row_number())
head(Data)
plan <- drake_plan(
files = list.files(path="data", pattern = "^hf147-1(.*).csv$",
full.names = TRUE),
Data = sapply(files, read.csv, simplify=FALSE) %>% bind_rows(.id = "id") %>%
select(latitude, longitude, ant.genus, ant.species) %>%
as.data.frame() %>% na.omit() %>% filter(ant.genus=="Aphaenogaster") %>%
select(-ant.genus) %>% mutate(ID=row_number())
## Cleaning
Data = clean_data(Data),
## Contour Plots
Data$Year_Bin <- cut(Data$Year, 28),
data.loess <- loess(Year ~ longitude * latitude, data = Data),
xgrid <-  seq(min(Data$longitude), max(Data$longitude), 0.5),
ygrid <-  seq(min(Data$latitude), max(Data$latitude), 0.5),
data.fit <-  expand.grid(longitude = xgrid, latitude = ygrid),
mtrx3d <-  predict(data.loess, newdata = data.fit),
mtrx.melt <- melt(mtrx3d, id.vars = c('longitude' , 'latitude'), measure.vars =('Year_Bin')),
names(mtrx.melt) <- c('longitude', 'latitude', 'Year_Bin'),
mtrx.melt$longitude <- as.numeric(str_sub(mtrx.melt$longitude, str_locate(mtrx.melt$longitude, '=')[1,1] + 1)),
mtrx.melt$latitude <- as.numeric(str_sub(mtrx.melt$latitude, str_locate(mtrx.melt$latitude, '=')[1,1] + 1)),
sampling_distribution_year = ggplot(mtrx.melt, aes(x = longitude, y = latitude, z = Year_Bin)) +
stat_contour() + geom_point(data=Data, aes(color=Year_Bin)) + labs(title='Aphaenogaster ssp. Sampling Distribution by Year'),
aph_hist <- ggplot(Data, aes(x=Year)) +
geom_histogram(binwidth = 28, fill="darkcyan", col="Black", size=1, alpha=0.65) +
theme(panel.background = element_rect(fill="darkseagreen1")) +
labs(title = "Aphaenogaster Observations", y="Number of Observations"),
BClim = brick("data/YbrevBC_2.5.grd")
)
clean_data <- function(x){
x[1822, c("Month", "Day", "Year")]<- c(03,08,1878)
x[1823, c("Month", "Day", "Year")]<- c(03,08,1878)
x[1824, c("Month", "Day", "Year")]<- c(04,29,1889)
x[1825, c("Month", "Day", "Year")]<- c(05,10,1896)
x[1826, c("Month", "Day", "Year")]<- c(05,01,1898)
x[1827, c("Month", "Day", "Year")]<- c(05,01,1898)
x[1828, c("Month", "Day", "Year")]<- c(07,14,1899)
x <- transform(x, Year = as.numeric(Year))
return(x)
}
plan <- drake_plan(
files = list.files(path="data", pattern = "^hf147-1(.*).csv$",
full.names = TRUE),
Data = sapply(files, read.csv, simplify=FALSE) %>% bind_rows(.id = "id") %>%
select(latitude, longitude, ant.genus, ant.species) %>%
as.data.frame() %>% na.omit() %>% filter(ant.genus=="Aphaenogaster") %>%
select(-ant.genus) %>% mutate(ID=row_number())
## Cleaning
Data = clean_data(Data),
## Contour Plots
Data$Year_Bin <- cut(Data$Year, 28),
data.loess <- loess(Year ~ longitude * latitude, data = Data),
xgrid <-  seq(min(Data$longitude), max(Data$longitude), 0.5),
ygrid <-  seq(min(Data$latitude), max(Data$latitude), 0.5),
data.fit <-  expand.grid(longitude = xgrid, latitude = ygrid),
mtrx3d <-  predict(data.loess, newdata = data.fit),
mtrx.melt <- melt(mtrx3d, id.vars = c('longitude' , 'latitude'), measure.vars =('Year_Bin')),
names(mtrx.melt) <- c('longitude', 'latitude', 'Year_Bin'),
mtrx.melt$longitude <- as.numeric(str_sub(mtrx.melt$longitude, str_locate(mtrx.melt$longitude, '=')[1,1] + 1)),
mtrx.melt$latitude <- as.numeric(str_sub(mtrx.melt$latitude, str_locate(mtrx.melt$latitude, '=')[1,1] + 1)),
sampling_distribution_year = ggplot(mtrx.melt, aes(x = longitude, y = latitude, z = Year_Bin)) +
stat_contour() + geom_point(data=Data, aes(color=Year_Bin)) + labs(title='Aphaenogaster ssp. Sampling Distribution by Year'),
aph_hist <- ggplot(Data, aes(x=Year)) +
geom_histogram(binwidth = 28, fill="darkcyan", col="Black", size=1, alpha=0.65) +
theme(panel.background = element_rect(fill="darkseagreen1")) +
labs(title = "Aphaenogaster Observations", y="Number of Observations"),
BClim = brick("data/YbrevBC_2.5.grd")
)
Data = sapply(files, read.csv, simplify=FALSE) %>% bind_rows(.id = "id") %>%
select(latitude, longitude, ant.genus, ant.species) %>%
as.data.frame() %>% na.omit() %>% filter(ant.genus=="Aphaenogaster") %>%
select(-ant.genus)
Data = clean_data(Data)
head(Data)
Data <- sapply(files, read.csv, simplify=FALSE) %>% bind_rows(.id = "id") %>%
select(latitude, longitude, ant.genus, ant.species, date) %>%
as.data.frame() %>% na.omit() %>% filter(ant.genus=="Aphaenogaster") %>%
select(-ant.genus) %>% separate(date, c('Month', 'Day', 'Year'),'/')
head(Data)
Data = sapply(files, read.csv, simplify=FALSE) %>% bind_rows(.id = "id") %>%
select(latitude, longitude, ant.genus, ant.species) %>%
as.data.frame() %>% na.omit() %>% filter(ant.genus=="Aphaenogaster") %>%
select(-ant.genus) %>% separate(date, c('Month', 'Day', 'Year'),'/')
Data = sapply(files, read.csv, simplify=FALSE) %>% bind_rows(.id = "id") %>%
select(latitude, longitude, ant.genus, ant.species) %>%
as.data.frame() %>% na.omit() %>% filter(ant.genus=="Aphaenogaster") %>%
select(-ant.genus) %>% separate(date, c('Month', 'Day', 'Year'),'/')
Data <- sapply(files, read.csv, simplify=FALSE) %>% bind_rows(.id = "id") %>%
select(latitude, longitude, ant.genus, ant.species, date) %>%
as.data.frame() %>% na.omit() %>% filter(ant.genus=="Aphaenogaster") %>%
select(-ant.genus) %>% separate(date, c('Month', 'Day', 'Year'),'/')
Data <- sapply(files, read.csv, simplify=FALSE) %>% bind_rows(.id = "id") %>%
select(latitude, longitude, ant.genus, ant.species, date) %>%
as.data.frame() %>% na.omit() %>% filter(ant.genus=="Aphaenogaster") %>%
select(-ant.genus) %>% separate(date, c('Month', 'Day', 'Year'),'/')
Data <- sapply(files, read.csv, simplify=FALSE) %>% bind_rows(.id = "id") %>%
select(latitude, longitude, ant.genus, ant.species, date) %>%
as.data.frame() %>% na.omit() %>% filter(ant.genus=="Aphaenogaster") %>%
select(-ant.genus) %>% separate(date, c('Month', 'Day', 'Year'),'/')
head(Data)
Data = clean_data(Data)
head(Data)
Data <- sapply(files, read.csv, simplify=FALSE) %>% bind_rows(.id = "id") %>%
select(latitude, longitude, ant.genus, ant.species, date) %>%
as.data.frame() %>% na.omit() %>% filter(ant.genus=="Aphaenogaster") %>%
select(-ant.genus) %>% separate(date, c('Month', 'Day', 'Year'),'/') %>%
mutate(ID=row_number())
head(Data)
Data[1822,]
Data = clean_data(Data)
Data[,ID="1822"]
Data[,ID=1822]
colnames(Data)
Data[,ID==1822]
Data[,ID]
Data[,"ID"]
Data[,"latitude"]
Data[,"ID"==1822]
head(Data)
Data[1822,]
Data[1823]
Data[1823,]
plotly_map_occurrences(Data)
plotly_map_occurrences(Data)
plotly_map_occurrences <- function(df){
plot_ly(df, lat=~latitude, lon=~longitude,
marker = list(color = "fuchsia"),
type = 'scattermapbox',
hovertext =df[,c('longitude','latitude','ID')]) %>%
layout(mapbox = list(style = 'open-street-map', zoom =4.5,
center = list(lon = -71.81, lat = 43.64)))}
plotly_map_occurrences(Data)
plotly_map_occurrences <- function(df){
plot_ly(df, lat=~latitude, lon=~longitude,
marker = list(color = "fuchsia"),
type = 'scattermapbox',
hovertext =df[,'ID']) %>%
layout(mapbox = list(style = 'open-street-map', zoom =4.5,
center = list(lon = -71.81, lat = 43.64)))}
plotly_map_occurrences(Data)
plotly_map_occurrences(Data)
Data[2322,]
gh.pkgs.names <- do.call(rbind,
strsplit(gh.pkgs,
split = "/"))[, 2]
## Check for supporting packages
cran.pkgs <- c("magrittr", "devtools",
"xtable", "reshape", "tools", "tidyr", "stringr",
"MuMIn", "lme4", "RLRsim", "vegan", "ecodist",
"bipartite", "RColorBrewer", "gplots", "plyr"
)
gh.pkgs <- c("ROpenSci/drake", "r-lib/styler")
gh.pkgs.names <- do.call(rbind,
strsplit(gh.pkgs,
split = "/"))[, 2]
## install packages that are not installed
## CRAN
if (any(!(cran.pkgs %in% installed.packages()[, 1]))){
sapply(cran.pkgs[which(!(cran.pkgs %in%
installed.packages()[, 1]))],
install.packages,
dependencies = TRUE,
repos = 'http://cran.us.r-project.org')
}
## github
if (any(!(gh.pkgs.names %in% installed.packages()[, 1]))){
sapply(gh.pkgs[which(!(gh.pkgs.names %in%
installed.packages()[, 1]))],
devtools::install_github,
dependencies = TRUE)
}
## github
if (any(!(gh.pkgs.names %in% installed.packages()[, 1]))){
sapply(gh.pkgs[which(!(gh.pkgs.names %in%
installed.packages()[, 1]))],
devtools::install_github,
dependencies = TRUE)
}
## Load libraries
sapply(c(cran.pkgs, gh.pkgs.names),
library, quietly = TRUE, character.only = TRUE)
## ENM Packages (copied from helpers.R)
packs <- c("gdistance", "fossil" , "igraph", "rgbif","mapproj","mapdata","sp", "reader", "dplyr",
"maptools","dismo","rJava","rgdal", "rgeos", "raster", "reshape2", "ggplot2","FedData")
lapply(packs[!(packs %in% installed.packages()[,'Package'])],install.packages)
all(unlist(lapply(packs, require, character.only = TRUE,quietly=TRUE)))
load_data <- function(files){
out <- sapply(files, read.csv, simplify=FALSE) %>% bind_rows(.id = "id") %>%
select(latitude, longitude, ant.genus, ant.species, date) %>%
as.data.frame() %>%
na.omit() %>%
filter(ant.genus=="Aphaenogaster") %>%
select(-ant.genus) %>%
separate(date, c('Month', 'Day', 'Year'),'/')
return(out)
}
clean_data <- function(x){
x[1822, c("Month", "Day", "Year")]<- c(03,08,1878)
x[1823, c("Month", "Day", "Year")]<- c(03,08,1878)
x[1824, c("Month", "Day", "Year")]<- c(04,29,1889)
x[1825, c("Month", "Day", "Year")]<- c(05,10,1896)
x[1826, c("Month", "Day", "Year")]<- c(05,01,1898)
x[1827, c("Month", "Day", "Year")]<- c(05,01,1898)
x[1828, c("Month", "Day", "Year")]<- c(07,14,1899)
x <- transform(x, Year = as.numeric(Year))
return(x)
}
subset_species <- function(species=""){
subset(Data, ant.species==species) %>%
select(-ant.species) %>% unique()}
plotly_map_occurrences <- function(df){
plot_ly(df, lat=~latitude, lon=~longitude,
marker = list(color = "fuchsia"),
type = 'scattermapbox',
hovertext =df[,c('longitude','latitude')]) %>%
layout(mapbox = list(style = 'open-street-map', zoom =4.5,
center = list(lon = -71.81, lat = 43.64)))}
plot_contour <- function(x){
x$Year_Bin = cut(x$Year, 28)
data.loess = loess(Year ~ longitude * latitude, data = x)
xgrid =  seq(min(x$longitude), max(x$longitude), 0.5)
ygrid =  seq(min(x$latitude), max(x$latitude), 0.5)
data.fit =  expand.grid(longitude = xgrid, latitude = ygrid)
mtrx3d =  predict(data.loess, newdata = data.fit)
mtrx.melt = melt(mtrx3d, id.vars = c('longitude' , 'latitude'),
measure.vars =('Year_Bin'))
names(mtrx.melt) = c('longitude', 'latitude', 'Year_Bin')
mtrx.melt$longitude = as.numeric(
str_sub(mtrx.melt$longitude,
str_locate(mtrx.melt$longitude, '=')[1,1] + 1))
mtrx.melt$latitude = as.numeric(
str_sub(mtrx.melt$latitude,
str_locate(mtrx.melt$latitude, '=')[1,1] + 1))
stat_contour() +
geom_point(data=x, aes(color=Year_Bin)) +
labs(title='Aphaenogaster ssp. Sampling Distribution by Year')
}
plan <- drake_plan(
## Munge data
files = list.files(path="data", pattern = "^hf147-1(.*).csv$",
full.names = TRUE),
## Cleaning
data.raw = load_data(files),
Data = clean_data(data.raw),
## Contour Plots
plot_contour(Data),
## Histogram plot
aph_hist = ggplot(Data, aes(x=Year)) +
geom_histogram(binwidth = 28, fill="darkcyan", col="Black", size=1, alpha=0.65) +
theme(panel.background = element_rect(fill="darkseagreen1")) +
labs(title = "Aphaenogaster Observations", y="Number of Observations"),
BClim = brick("data/YbrevBC_2.5.grd")
)
plan <- drake_plan(
## Munge data
files = list.files(path="data", pattern = "^hf147-1(.*).csv$",
full.names = TRUE),
## Cleaning
data.raw = load_data(files),
Data = clean_data(data.raw),
## Contour Plots
plot_contour(Data),
## Histogram plot
aph_hist = ggplot(Data, aes(x=Year)) +
geom_histogram(binwidth = 28, fill="darkcyan", col="Black", size=1, alpha=0.65) +
theme(panel.background = element_rect(fill="darkseagreen1")) +
labs(title = "Aphaenogaster Observations", y="Number of Observations"),
BClim = brick("data/YbrevBC_2.5.grd")
)
plot_contour(Data)
